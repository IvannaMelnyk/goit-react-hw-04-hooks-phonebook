{"version":3,"sources":["components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["ContactList","contacts","onRemove","className","s","list","map","id","name","phone","listItem","listItemText","btn","type","onClick","INITIAL_STATE","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","uuid","resetForm","onCheckUnique","alert","this","form","onSubmit","input","placeholder","onChange","button","Component","Filter","filter","label","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","contact","handleRemoveContact","prevState","handleFilterChange","getVisibleContacts","toLowerCase","includes","console","log","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+RAwBeA,EAtBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAClB,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAASK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACZ,qBAAIN,UAAWC,IAAEM,SAAjB,UACE,sBAAMP,UAAWC,IAAEO,aAAnB,SAAkCH,IAClC,uBAAML,UAAWC,IAAEO,aAAnB,cAAmCF,KACnC,wBAAQN,UAAWC,IAAEQ,IAAKC,KAAK,SAASC,QAAS,kBAAMZ,EAASK,IAAhE,sBAH8BA,S,gCCAhCQ,EAAgB,CACpBP,KAAM,GACNC,MAAO,IAyDMO,E,4MArDbC,MAAQF,E,EAERG,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACZX,EAAgBW,EAAhBX,KAAMY,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBb,EAAOY,K,EAE1BE,iBAAmB,SAAAC,GACjBA,EAAEC,iBADoB,MAGE,EAAKP,MAArBT,EAHc,EAGdA,KAAMC,EAHQ,EAGRA,MACNgB,EAAU,EAAKC,MAAfD,MACgB,EAAKE,iBAE7BF,EAAM,CAAElB,GAAIqB,cAAQpB,OAAMC,UAC1B,EAAKoB,c,EAEPF,aAAe,WAAO,IAAD,EACK,EAAKV,MAArBT,EADW,EACXA,KAAMC,EADK,EACLA,MACNqB,EAAkB,EAAKJ,MAAvBI,cACR,OAAKtB,GAASC,EAIPqB,EAActB,IAHnBuB,MAAM,wBACC,I,EAIXF,UAAY,kBAAM,EAAKR,SAASN,I,uDACtB,IAAD,EACiBiB,KAAKf,MAArBT,EADD,EACCA,KAAMC,EADP,EACOA,MACd,OACE,uBAAMN,UAAWC,IAAE6B,KAAMC,SAAUF,KAAKV,iBAAxC,UACE,uBACEnB,UAAWC,IAAE+B,MACbtB,KAAK,OACLL,KAAK,OACL4B,YAAY,aACZhB,MAAOZ,EACP6B,SAAUL,KAAKd,mBAEjB,uBACEf,UAAWC,IAAE+B,MACbtB,KAAK,MACLL,KAAK,QACL4B,YAAY,cACZhB,MAAOX,EACP4B,SAAUL,KAAKd,mBAEjB,wBAAQf,UAAWC,IAAEkC,OAAQzB,KAAK,SAAlC,gC,GA/CkB0B,a,gBCaXC,EAnBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQJ,EAAX,EAAWA,SAAX,OACb,wBAAOlC,UAAWC,IAAEsC,MAApB,0BAEE,uBACEvC,UAAWC,IAAE+B,MACbtB,KAAK,OACLL,KAAK,SACLY,MAAOqB,EACPJ,SAAU,gBAAGlB,EAAH,EAAGA,OAAH,OAAgBkB,EAASlB,EAAOC,QAC1CgB,YAAY,8BCPGO,E,4MACnB1B,MAAQ,CACNhB,SAAU,CACR,CAAEM,GAAI,OAAQC,KAAM,gBAAiBC,MAAO,aAC5C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,MAAO,aAC7C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,MAAO,aAC5C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,MAAO,cAE/CgC,OAAQ,I,EAGVG,iBAAmB,SAAAC,GAAU,OAC3B,EAAKxB,UAAS,gBAAGpB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgB4C,S,EAG5BC,yBAA2B,SAAAtC,GAAS,IAE5BuC,IADe,EAAK9B,MAAlBhB,SAC0B+C,MAAK,SAAAC,GAAO,OAAIA,EAAQzC,OAASA,KAEnE,OADAuC,GAAkBhB,MAAM,6BAChBgB,G,EAEVG,oBAAsB,SAAA3C,GACpB,EAAKc,UAAS,SAAA8B,GAAS,MAAK,CAC1BlD,SAAUkD,EAAUlD,SAASwC,QAAO,SAAAQ,GAAO,OAAIA,EAAQ1C,KAAOA,U,EAGlE6C,mBAAqB,SAAAX,GAAM,OAAI,EAAKpB,SAAS,CAAEoB,Y,EAE/CY,mBAAqB,WAAO,IAAD,EACI,EAAKpC,MAA1BhB,EADiB,EACjBA,SAAUwC,EADO,EACPA,OAClB,OAAOxC,EAASwC,QAAO,SAAAQ,GAAO,OAC5BA,EAAQzC,KAAK8C,cAAcC,SAASd,EAAOa,mB,kEAK7CE,QAAQC,IAAI,qBAEZ,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEnDJ,GACF1B,KAAKX,SAAS,CAAEpB,SAAUyD,M,yCAGXK,EAAWZ,GAC5BK,QAAQC,IAAI,sBACRzB,KAAKf,MAAMhB,WAAakD,EAAUlD,WACpCuD,QAAQC,IAAI,iHACZI,aAAaG,QAAQ,WAAYL,KAAKM,UAAUjC,KAAKf,MAAMhB,c,+BAGrD,IACAwC,EAAWT,KAAKf,MAAhBwB,OACFyB,EAAkBlC,KAAKqB,qBAC7B,OACE,qCACE,8CACA,cAAC,EAAD,CACE5B,MAAOO,KAAKY,iBACZd,cAAeE,KAAKc,2BAEtB,+CACA,cAAC,EAAD,CAAQL,OAAQA,EAAQJ,SAAUL,KAAKoB,qBACvC,cAAC,EAAD,CACEnD,SAAUiE,EACVhE,SAAU8B,KAAKkB,6B,GAlEQX,aCDjC4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,aAAe,kCAAkC,IAAM,2B,kBCAnJD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,kBCA/FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.2129f5fe.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nconst ContactList = ({ contacts, onRemove }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, phone }) => (\n      <li className={s.listItem} key={id}>\n        <span className={s.listItemText}>{name}</span>\n        <span className={s.listItemText}>:{phone}</span>\n        <button className={s.btn} type=\"button\" onClick={() => onRemove(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","// import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n    const isValidatedForm = this.validateForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, phone });\n    this.resetForm();\n  };\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onCheckUnique } = this.props;\n    if (!name || !phone) {\n      alert('Some filed is empty');\n      return false;\n    }\n    return onCheckUnique(name);\n  };\n  resetForm = () => this.setState(INITIAL_STATE);\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone\"\n          value={phone}\n          onChange={this.handleChangeForm}\n        />\n        <button className={s.button} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <label className={s.label}>\n    Find contacts\n    <input\n      className={s.input}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport ContactList from './ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n    return !isExistContact;\n  };\n  handleRemoveContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidMount() {\n    console.log('componentDidMount');\n\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновились контакты');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h2>Form Conract</h2>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts List</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__HDteR\",\"listItem\":\"ContactList_listItem__2FtO8\",\"listItemText\":\"ContactList_listItemText__2Gg-u\",\"btn\":\"ContactList_btn__3ZSUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__eyEwp\",\"input\":\"ContactForm_input__oOmT_\",\"button\":\"ContactForm_button__TeuMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3GUlO\",\"input\":\"Filter_input__1eKTy\"};"],"sourceRoot":""}